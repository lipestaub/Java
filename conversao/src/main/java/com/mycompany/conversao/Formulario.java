/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.conversao;

/**
 *
 * @author Aluno
 */
public class Formulario extends javax.swing.JFrame {

    /**
     * Creates new form Formulario
     */
    public Formulario() {
        initComponents();
    }
    
    Double valor, resultado;
    
    String select1, select2;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        Select2 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        Select1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        txtResultado = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel1.setText("Converter:");

        Select2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar...", "Quilometro (km)", "Hectometro (hm)", "Decametro (dam)", "Metro (m)", "Decimetro (dm)", "Centimetro (cm)", "Milimetro (mm)" }));

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel2.setText("Para:");

        Select1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar...", "Quilometro (km)", "Hectometro (hm)", "Decametro (dam)", "Metro (m)", "Decimetro (dm)", "Centimetro (cm)", "Milimetro (mm)" }));
        Select1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Select1ActionPerformed(evt);
            }
        });

        jButton1.setText("Converter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel3.setText("Resultado:");

        jButton3.setText("Limpar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel4.setText("CONVERSOR");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Select2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Select1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 8, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(145, 145, 145))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Select1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Select2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Select1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Select1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Select1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        Select1.setSelectedItem("Selecionar...");
        
        Select2.setSelectedItem("Selecionar...");
        
        txtValor.setText("");
        
        txtResultado.setText("");
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        valor = Double.parseDouble(txtValor.getText());
        
        select1 = Select1.getSelectedItem().toString();
        
        select2 = Select2.getSelectedItem().toString();
        
        switch(select1){
        
            case "Quilometro (km)":
                
                if(select2 == "Quilometro (km)"){
                    
                    resultado = valor;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " km");
                    
                }else if(select2 == "Hectometro (hm)"){
                    
                    resultado = valor * 10;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " hm");
                    
                }else if(select2 == "Decametro (dam)"){
                    
                    resultado = valor * 100;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " dam");
                    
                }else if(select2 == "Metro (m)"){
                    
                    resultado = valor * 1000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " m");
                    
                }else if(select2 == "Decimetro (dm)"){
                    
                    resultado = valor * 10000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " dm");
                    
                }else if(select2 == "Centimetro (cm)"){
                    
                    resultado = valor * 100000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " cm");
                    
                }else if(select2 == "Milimetro (mm)"){
                    
                    resultado = valor * 1000000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " mm");
                    
                }
                
                break;
                
            case "Hectometro (hm)":
                
                if(select2 == "Quilometro (km)"){
                    
                    resultado = valor / 10;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " km");
                    
                }else if(select2 == "Hectometro (hm)"){
                    
                    resultado = valor;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " hm");
                    
                }else if(select2 == "Decametro (dam)"){
                    
                    resultado = valor * 10;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " dam");
                    
                }else if(select2 == "Metro (m)"){
                    
                    resultado = valor * 100;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " m");
                    
                }else if(select2 == "Decimetro (dm)"){
                    
                    resultado = valor * 1000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " dm");
                    
                }else if(select2 == "Centimetro (cm)"){
                    
                    resultado = valor * 10000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " cm");
                    
                }else if(select2 == "Milimetro (mm)"){
                    
                    resultado = valor * 100000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " mm");
                    
                }
                
                break;
                
            case "Decametro (dam)":
                
                if(select2 == "Quilometro (km)"){
                    
                    resultado = valor / 100;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " km");
                    
                }else if(select2 == "Hectometro (hm)"){
                    
                    resultado = valor / 10;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " hm");
                    
                }else if(select2 == "Decametro (dam)"){
                    
                    resultado = valor;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " dam");
                    
                }else if(select2 == "Metro (m)"){
                    
                    resultado = valor * 10;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " m");
                    
                }else if(select2 == "Decimetro (dm)"){
                    
                    resultado = valor * 100;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " dm");
                    
                }else if(select2 == "Centimetro (cm)"){
                    
                    resultado = valor * 1000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " cm");
                    
                }else if(select2 == "Milimetro (mm)"){
                    
                    resultado = valor * 10000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " mm");
                    
                }
                
                break;
                
            case "Metro (m)":
                
                if(select2 == "Quilometro (km)"){
                    
                    resultado = valor / 1000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " km");
                    
                }else if(select2 == "Hectometro (hm)"){
                    
                    resultado = valor / 100;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " hm");
                    
                }else if(select2 == "Decametro (dam)"){
                    
                    resultado = valor / 10;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " dam");
                    
                }else if(select2 == "Metro (m)"){
                    
                    resultado = valor;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " m");
                    
                }else if(select2 == "Decimetro (dm)"){
                    
                    resultado = valor * 10;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " dm");
                    
                }else if(select2 == "Centimetro (cm)"){
                    
                    resultado = valor * 100;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " cm");
                    
                }else if(select2 == "Milimetro (mm)"){
                    
                    resultado = valor * 1000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " mm");
                    
                }
                
                break;
                
            case "Decimetro (dm)":
                
                if(select2 == "Quilometro (km)"){
                    
                    resultado = valor / 10000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " km");
                    
                }else if(select2 == "Hectometro (hm)"){
                    
                    resultado = valor / 1000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " hm");
                    
                }else if(select2 == "Decametro (dam)"){
                    
                    resultado = valor / 100;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " dam");
                    
                }else if(select2 == "Metro (m)"){
                    
                    resultado = valor / 10;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " m");
                    
                }else if(select2 == "Decimetro (dm)"){
                    
                    resultado = valor;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " dm");
                    
                }else if(select2 == "Centimetro (cm)"){
                    
                    resultado = valor * 10;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " cm");
                    
                }else if(select2 == "Milimetro (mm)"){
                    
                    resultado = valor * 100;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " mm");
                    
                }
                
                break;
                
            case "Centimetro (cm)":
                
                if(select2 == "Quilometro (km)"){
                    
                    resultado = valor / 100000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " km");
                    
                }else if(select2 == "Hectometro (hm)"){
                    
                    resultado = valor / 10000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " hm");
                    
                }else if(select2 == "Decametro (dam)"){
                    
                    resultado = valor / 1000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " dam");
                    
                }else if(select2 == "Metro (m)"){
                    
                    resultado = valor / 100;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " m");
                    
                }else if(select2 == "Decimetro (dm)"){
                    
                    resultado = valor / 10;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " dm");
                    
                }else if(select2 == "Centimetro (cm)"){
                    
                    resultado = valor;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " cm");
                    
                }else if(select2 == "Milimetro (mm)"){
                    
                    resultado = valor * 10;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " mm");
                    
                }
                
                break;
                
            case "Milimetro (mm)":
                
                if(select2 == "Quilometro (km)"){
                    
                    resultado = valor / 1000000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " km");
                    
                }else if(select2 == "Hectometro (hm)"){
                    
                    resultado = valor / 100000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " hm");
                    
                }else if(select2 == "Decametro (dam)"){
                    
                    resultado = valor / 10000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " dam");
                    
                }else if(select2 == "Metro (m)"){
                    
                    resultado = valor / 1000;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " m");
                    
                }else if(select2 == "Decimetro (dm)"){
                    
                    resultado = valor / 100;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " dm");
                    
                }else if(select2 == "Centimetro (cm)"){
                    
                    resultado = valor / 10;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " cm");
                    
                }else if(select2 == "Milimetro (mm)"){
                    
                    resultado = valor;
                    
                    txtResultado.setText(String.valueOf(resultado).replaceFirst("\\.0*$|(\\.\\d*?)0+$", "$1") + " mm");
                    
                }
                
                break;
            
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Select1;
    private javax.swing.JComboBox<String> Select2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtResultado;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
